Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                              ./speed_cntr.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              ./speed_cntr.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                              ./uart.o (__divmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                              ./speed_cntr.o (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                              ./speed_cntr.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
                              ./speed_cntr.o (sprintf)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

last_rst            0x2               ./main.o
reset_avr_running   0x2               ./main.o
counter_bt          0x2               ./main.o
UART_state          0x1               ./uart.o
counter_avr         0x2               ./main.o
emergency_extra_pos_offset_set
                    0x1               ./main.o
UART_RxPtr          0x1               ./uart.o
reset_bt_running    0x2               ./main.o
last_bt_state       0x2               ./main.o
reset_global_active
                    0x2               ./main.o
counter_bt_init     0x2               ./main.o
last_avr_state      0x2               ./main.o
UART_RxBuffer       0x20              ./uart.o
emergency_shutdown  0x1               ./main.o
reset_led           0x2               ./main.o
srd                 0xd               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./main.o
LOAD ./reset.o
LOAD ./sm_driver.o
LOAD ./speed_cntr.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1650
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e      0x1d6 ./main.o
                0x000000000000005e                Init
                0x000000000000007e                check_helper
                0x000000000000008a                check_power_state
                0x00000000000000e6                main
 .text          0x0000000000000234      0x2f6 ./reset.o
                0x0000000000000234                reset_init
                0x000000000000029e                reset
                0x0000000000000308                config_timer0
                0x0000000000000314                __vector_9
                0x0000000000000422                __vector_1
                0x00000000000004b6                __vector_2
 .text          0x000000000000052a       0x74 ./sm_driver.o
                0x000000000000052a                sm_driver_Init_IO
                0x0000000000000538                sm_driver_StepOutput
                0x0000000000000556                sm_driver_StepCounter
 .text          0x000000000000059e      0x8a8 ./speed_cntr.o
                0x000000000000059e                speed_cntr_Init_Timer1
                0x00000000000005d8                __vector_6
                0x00000000000008ea                sqrt_2
                0x0000000000000980                speed_cntr_Move
 .text          0x0000000000000e46      0x162 ./uart.o
                0x0000000000000e46                InitUART
                0x0000000000000e64                disable_uart
                0x0000000000000e6c                uart_SendByte
                0x0000000000000e74                uart_SendString
                0x0000000000000e98                uart_SendInt
                0x0000000000000f2a                __vector_11
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
 .text          0x0000000000000fa8        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
                0x0000000000000fa8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000fa8       0x3e /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                0x0000000000000fa8                __mulsi3
 .text.libgcc   0x0000000000000fe6       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000fe6                __udivmodhi4
 .text.libgcc   0x000000000000100e       0x26 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                0x000000000000100e                __divmodhi4
                0x000000000000100e                _div
 .text.libgcc   0x0000000000001034       0x44 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000001034                __udivmodsi4
 .text.libgcc   0x0000000000001078       0x36 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                0x0000000000001078                __divmodsi4
 .text.libgcc   0x00000000000010ae        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000010ae        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000010ae        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000010ae       0x40 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
                0x00000000000010ae                sprintf
 .text.avr-libc
                0x00000000000010ee      0x3b0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
                0x00000000000010ee                vfprintf
 .text.avr-libc
                0x000000000000149e       0x16 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
                0x000000000000149e                strnlen_P
 .text.avr-libc
                0x00000000000014b4       0x16 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
                0x00000000000014b4                strnlen
 .text.avr-libc
                0x00000000000014ca       0x58 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
                0x00000000000014ca                fputc
 .text.avr-libc
                0x0000000000001522       0xbc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
                0x0000000000001522                __ultoa_invert
 .text.libgcc   0x00000000000015de       0x38 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
                0x00000000000015de                __prologue_saves__
 .text.libgcc   0x0000000000001616       0x36 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
                0x0000000000001616                __epilogue_restores__
                0x000000000000164c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000164c        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x000000000000164c                exit
                0x000000000000164c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000164c        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001650                _etext = .

.data           0x0000000000800060       0x22 load address 0x0000000000001650
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x2 ./main.o
 .data          0x0000000000800062        0x0 ./reset.o
 .data          0x0000000000800062        0x8 ./sm_driver.o
                0x0000000000800062                steptab
 .data          0x000000000080006a        0xd ./speed_cntr.o
 .data          0x0000000000800077        0xb ./uart.o
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
 .data          0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800082                . = ALIGN (0x2)
                0x0000000000800082                _edata = .
                0x0000000000800082                PROVIDE (__data_end, .)

.bss            0x0000000000800082       0x50
                0x0000000000800082                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800082        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800082        0x2 ./main.o
                0x0000000000800082                status
                0x0000000000800083                voltage_down_counter
 .bss           0x0000000000800084        0x2 ./reset.o
                0x0000000000800084                ledstate
 .bss           0x0000000000800086        0x3 ./sm_driver.o
                0x0000000000800086                stepPosition
 .bss           0x0000000000800089        0x2 ./speed_cntr.o
 .bss           0x000000000080008b        0x2 ./uart.o
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
 .bss           0x000000000080008d        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080008d       0x23 ./main.o
                0x000000000080008d                last_rst
                0x000000000080008f                reset_avr_running
                0x0000000000800091                counter_bt
                0x0000000000800093                counter_avr
                0x0000000000800095                emergency_extra_pos_offset_set
                0x0000000000800096                reset_bt_running
                0x0000000000800098                last_bt_state
                0x000000000080009a                reset_global_active
                0x000000000080009c                counter_bt_init
                0x000000000080009e                last_avr_state
                0x00000000008000a0                emergency_shutdown
                0x00000000008000a1                reset_led
                0x00000000008000a3                srd
 COMMON         0x00000000008000b0       0x22 ./uart.o
                0x00000000008000b0                UART_state
                0x00000000008000b1                UART_RxPtr
                0x00000000008000b2                UART_RxBuffer
                0x00000000008000d2                PROVIDE (__bss_end, .)
                0x0000000000001650                __data_load_start = LOADADDR (.data)
                0x0000000000001672                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000d2        0x0
                0x00000000008000d2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000d2                PROVIDE (__noinit_end, .)
                0x00000000008000d2                _end = .
                0x00000000008000d2                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1d28
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc      0x3cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
                                        0x3d8 (size before relaxing)
 .stab          0x0000000000000a98      0xaf8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
                                        0xcd8 (size before relaxing)
 .stab          0x0000000000001590       0x9c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x000000000000162c       0x9c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x00000000000016c8      0x1e0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
                                        0x3c0 (size before relaxing)
 .stab          0x00000000000018a8      0x480 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000      0xc84
 *(.stabstr)
 .stabstr       0x0000000000000000      0xc84 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Watchdog.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
Init                                              ./main.o
InitUART                                          ./uart.o
                                                  ./main.o
UART_RxBuffer                                     ./uart.o
                                                  ./main.o
UART_RxPtr                                        ./uart.o
UART_state                                        ./uart.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                                                  ./uart.o
__divmodsi4                                       /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                                                  ./speed_cntr.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                                                  ./uart.o
                                                  ./speed_cntr.o
                                                  ./sm_driver.o
                                                  ./reset.o
                                                  ./main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                                                  ./uart.o
                                                  ./speed_cntr.o
                                                  ./sm_driver.o
                                                  ./main.o
__epilogue_restores__                             /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_epilogue.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
__heap_end                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__mulsi3                                          /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                                                  ./speed_cntr.o
__prologue_saves__                                /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_prologue.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
__stack                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
                                                  ./uart.o
                                                  ./speed_cntr.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                                                  /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                                                  ./speed_cntr.o
__ultoa_invert                                    /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(ultoa_invert.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
__vector_1                                        ./reset.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_11                                       ./uart.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_2                                        ./reset.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_6                                        ./speed_cntr.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_9                                        ./reset.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
_div                                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
check_helper                                      ./main.o
check_power_state                                 ./main.o
config_timer0                                     ./reset.o
                                                  ./main.o
counter_avr                                       ./reset.o
                                                  ./main.o
counter_bt                                        ./reset.o
                                                  ./main.o
counter_bt_init                                   ./reset.o
                                                  ./main.o
disable_uart                                      ./uart.o
                                                  ./main.o
emergency_extra_pos_offset_set                    ./main.o
emergency_shutdown                                ./main.o
exit                                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
fputc                                             /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(fputc.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
last_avr_state                                    ./reset.o
                                                  ./main.o
last_bt_state                                     ./reset.o
                                                  ./main.o
last_rst                                          ./reset.o
                                                  ./main.o
ledstate                                          ./reset.o
main                                              ./main.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
reset                                             ./reset.o
reset_avr_running                                 ./reset.o
                                                  ./main.o
reset_bt_running                                  ./reset.o
                                                  ./main.o
reset_global_active                               ./reset.o
                                                  ./main.o
reset_init                                        ./reset.o
                                                  ./main.o
reset_led                                         ./reset.o
                                                  ./main.o
sm_driver_Init_IO                                 ./sm_driver.o
                                                  ./main.o
sm_driver_StepCounter                             ./sm_driver.o
                                                  ./speed_cntr.o
sm_driver_StepOutput                              ./sm_driver.o
                                                  ./main.o
speed_cntr_Init_Timer1                            ./speed_cntr.o
                                                  ./main.o
speed_cntr_Move                                   ./speed_cntr.o
                                                  ./main.o
sprintf                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
                                                  ./speed_cntr.o
sqrt_2                                            ./speed_cntr.o
srd                                               ./speed_cntr.o
                                                  ./main.o
status                                            ./main.o
                                                  ./uart.o
stepPosition                                      ./sm_driver.o
steptab                                           ./sm_driver.o
strnlen                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
strnlen_P                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(strnlen_P.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
uart_SendByte                                     ./uart.o
                                                  ./main.o
uart_SendInt                                      ./uart.o
                                                  ./main.o
uart_SendString                                   ./uart.o
                                                  ./main.o
vfprintf                                          /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(vfprintf_std.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a(sprintf.o)
voltage_down_counter                              ./main.o
