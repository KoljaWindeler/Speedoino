Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                              ./speed_cntr.o (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                              ./uart.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                              ./speed_cntr.o (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                              ./speed_cntr.o (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

last_rst            0x2               ./main.o
reset_avr_running   0x2               ./main.o
counter_bt          0x2               ./main.o
UART_state          0x1               ./uart.o
counter_avr         0x2               ./main.o
UART_RxPtr          0x1               ./uart.o
reset_bt_running    0x2               ./main.o
last_bt_state       0x2               ./main.o
last_avr_state      0x2               ./main.o
soll_pos            0x4               ./main.o
UART_RxBuffer       0x20              ./uart.o
reset_led           0x2               ./main.o
srd                 0xb               ./speed_cntr.o
running_value       0x2               ./speed_cntr.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
LOAD ./main.o
LOAD ./reset.o
LOAD ./sm_driver.o
LOAD ./speed_cntr.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xcf4
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e       0xd8 ./main.o
                0x000000000000005e                Init
                0x000000000000007c                main
 .text          0x0000000000000136      0x2a8 ./reset.o
                0x0000000000000136                reset_init
                0x0000000000000198                reset
                0x00000000000001f4                config_timer0
                0x0000000000000200                __vector_9
                0x00000000000002f6                __vector_1
                0x000000000000036a                __vector_2
 .text          0x00000000000003de       0x7e ./sm_driver.o
                0x00000000000003de                sm_driver_Init_IO
                0x00000000000003ec                sm_driver_StepOutput
                0x000000000000040a                sm_driver_StepCounter
 .text          0x000000000000045c      0x64c ./speed_cntr.o
                0x000000000000045c                speed_cntr_Init_Timer1
                0x0000000000000472                __vector_6
                0x0000000000000772                sqrt_2
                0x0000000000000808                speed_cntr_Move
                0x0000000000000a80                min
                0x0000000000000a90                set_stopper
                0x0000000000000a9e                get_stopper
 .text          0x0000000000000aa8      0x168 ./uart.o
                0x0000000000000aa8                InitUART
                0x0000000000000ac6                uart_SendByte
                0x0000000000000ace                uart_SendString
                0x0000000000000af2                uart_SendInt
                0x0000000000000b84                __vector_11
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000c10        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000c10                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000c10       0x3e /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                0x0000000000000c10                __mulsi3
 .text.libgcc   0x0000000000000c4e       0x28 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000c4e                __udivmodhi4
 .text.libgcc   0x0000000000000c76       0x44 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000000c76                __udivmodsi4
 .text.libgcc   0x0000000000000cba       0x36 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                0x0000000000000cba                __divmodsi4
 .text.libgcc   0x0000000000000cf0        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000cf0        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000cf0        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000cf0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000cf0        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                0x0000000000000cf0                exit
                0x0000000000000cf0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000cf0        0x4 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000cf4                _etext = .

.data           0x0000000000800060       0x18 load address 0x0000000000000cf4
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x4 ./main.o
 .data          0x0000000000800064        0x0 ./reset.o
 .data          0x0000000000800064        0x8 ./sm_driver.o
                0x0000000000800064                steptab
 .data          0x000000000080006c        0x0 ./speed_cntr.o
 .data          0x000000000080006c        0xb ./uart.o
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800077        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800078                . = ALIGN (0x2)
 *fill*         0x0000000000800077        0x1 00
                0x0000000000800078                _edata = .
                0x0000000000800078                PROVIDE (__data_end, .)

.bss            0x0000000000800078       0x4f
                0x0000000000800078                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800078        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800078        0x1 ./main.o
                0x0000000000800078                status
 .bss           0x0000000000800079        0x0 ./reset.o
 .bss           0x0000000000800079        0x3 ./sm_driver.o
                0x0000000000800079                stepPosition
 .bss           0x000000000080007c        0x6 ./speed_cntr.o
 .bss           0x0000000000800082        0x2 ./uart.o
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800084        0x0 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800084       0x14 ./main.o
                0x0000000000800084                last_rst
                0x0000000000800086                reset_avr_running
                0x0000000000800088                counter_bt
                0x000000000080008a                counter_avr
                0x000000000080008c                reset_bt_running
                0x000000000080008e                last_bt_state
                0x0000000000800090                last_avr_state
                0x0000000000800092                soll_pos
                0x0000000000800096                reset_led
 COMMON         0x0000000000800098        0xd ./speed_cntr.o
                0x0000000000800098                srd
                0x00000000008000a3                running_value
 COMMON         0x00000000008000a5       0x22 ./uart.o
                0x00000000008000a5                UART_state
                0x00000000008000a6                UART_RxPtr
                0x00000000008000a7                UART_RxBuffer
                0x00000000008000c7                PROVIDE (__bss_end, .)
                0x0000000000000cf4                __data_load_start = LOADADDR (.data)
                0x0000000000000d0c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c7        0x0
                0x00000000008000c7                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c7                PROVIDE (__noinit_end, .)
                0x00000000008000c7                _end = .
                0x00000000008000c7                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Watchdog.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
Init                                              ./main.o
InitUART                                          ./uart.o
                                                  ./main.o
UART_RxBuffer                                     ./uart.o
                                                  ./main.o
UART_RxPtr                                        ./uart.o
UART_state                                        ./uart.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
__divmodsi4                                       /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                                                  ./speed_cntr.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_clear_bss.o)
                                                  ./uart.o
                                                  ./speed_cntr.o
                                                  ./sm_driver.o
                                                  ./reset.o
                                                  ./main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_copy_data.o)
                                                  ./uart.o
                                                  ./sm_driver.o
                                                  ./main.o
__heap_end                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__mulsi3                                          /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_mulsi3.o)
                                                  ./speed_cntr.o
__stack                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodhi4.o)
                                                  ./uart.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_udivmodsi4.o)
                                                  /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_divmodsi4.o)
                                                  ./speed_cntr.o
__vector_1                                        ./reset.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_11                                       ./uart.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_2                                        ./reset.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_6                                        ./speed_cntr.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_9                                        ./reset.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
config_timer0                                     ./reset.o
                                                  ./main.o
counter_avr                                       ./reset.o
                                                  ./main.o
counter_bt                                        ./reset.o
                                                  ./main.o
exit                                              /usr/lib/gcc/avr/4.5.3/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
get_stopper                                       ./speed_cntr.o
                                                  ./main.o
last_avr_state                                    ./reset.o
                                                  ./main.o
last_bt_state                                     ./reset.o
                                                  ./main.o
last_rst                                          ./reset.o
                                                  ./main.o
main                                              ./main.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr4/crtm8.o
min                                               ./speed_cntr.o
reset                                             ./reset.o
reset_avr_running                                 ./reset.o
                                                  ./main.o
reset_bt_running                                  ./reset.o
                                                  ./main.o
reset_init                                        ./reset.o
                                                  ./main.o
reset_led                                         ./reset.o
                                                  ./main.o
running_value                                     ./speed_cntr.o
set_stopper                                       ./speed_cntr.o
sm_driver_Init_IO                                 ./sm_driver.o
                                                  ./main.o
sm_driver_StepCounter                             ./sm_driver.o
                                                  ./speed_cntr.o
sm_driver_StepOutput                              ./sm_driver.o
                                                  ./main.o
soll_pos                                          ./uart.o
                                                  ./speed_cntr.o
                                                  ./sm_driver.o
                                                  ./reset.o
                                                  ./main.o
speed_cntr_Init_Timer1                            ./speed_cntr.o
                                                  ./main.o
speed_cntr_Move                                   ./speed_cntr.o
                                                  ./main.o
sqrt_2                                            ./speed_cntr.o
srd                                               ./speed_cntr.o
status                                            ./main.o
                                                  ./uart.o
                                                  ./speed_cntr.o
stepPosition                                      ./sm_driver.o
steptab                                           ./sm_driver.o
uart_SendByte                                     ./uart.o
                                                  ./main.o
uart_SendInt                                      ./uart.o
uart_SendString                                   ./uart.o
                                                  ./main.o
