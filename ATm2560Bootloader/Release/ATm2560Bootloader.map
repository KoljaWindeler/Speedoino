Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o (exit)
/usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eerd_byte_atmega2560.o)
                              ./main.o (__eerd_byte_m2560)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eewr_byte_atmega2560.o)
                              ./main.o (__eewr_byte_m2560)

Allocating common symbols
Common symbol       size              file

address             0x2               ./main.o
buff                0x100             ./main.o
length              0x2               ./main.o
i                   0x1               ./main.o
address_high        0x1               ./main.o
flags               0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000100000 xr
data             0x0000000000800200 0x000000000000fe00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xa00
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000000000000e4                . = ALIGN (0x2)
                0x00000000000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000e4        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000e4                __ctors_start = .
 *(.ctors)
                0x00000000000000e4                __ctors_end = .
                0x00000000000000e4                __dtors_start = .
 *(.dtors)
                0x00000000000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000e4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
                0x00000000000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000e4       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000f4       0x1a /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_copy_data.o)
                0x00000000000000f4                __do_copy_data
 .init4         0x000000000000010e       0x10 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
                0x000000000000010e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000011e        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x0000000000000126        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
                0x0000000000000126                __vector_38
                0x0000000000000126                __vector_22
                0x0000000000000126                __vector_28
                0x0000000000000126                __vector_1
                0x0000000000000126                __vector_32
                0x0000000000000126                __vector_34
                0x0000000000000126                __vector_24
                0x0000000000000126                __vector_12
                0x0000000000000126                __vector_55
                0x0000000000000126                __vector_46
                0x0000000000000126                __bad_interrupt
                0x0000000000000126                __vector_6
                0x0000000000000126                __vector_31
                0x0000000000000126                __vector_35
                0x0000000000000126                __vector_39
                0x0000000000000126                __vector_3
                0x0000000000000126                __vector_23
                0x0000000000000126                __vector_30
                0x0000000000000126                __vector_45
                0x0000000000000126                __vector_25
                0x0000000000000126                __vector_11
                0x0000000000000126                __vector_54
                0x0000000000000126                __vector_13
                0x0000000000000126                __vector_17
                0x0000000000000126                __vector_19
                0x0000000000000126                __vector_56
                0x0000000000000126                __vector_7
                0x0000000000000126                __vector_49
                0x0000000000000126                __vector_41
                0x0000000000000126                __vector_43
                0x0000000000000126                __vector_27
                0x0000000000000126                __vector_5
                0x0000000000000126                __vector_33
                0x0000000000000126                __vector_47
                0x0000000000000126                __vector_52
                0x0000000000000126                __vector_37
                0x0000000000000126                __vector_4
                0x0000000000000126                __vector_44
                0x0000000000000126                __vector_51
                0x0000000000000126                __vector_9
                0x0000000000000126                __vector_2
                0x0000000000000126                __vector_21
                0x0000000000000126                __vector_15
                0x0000000000000126                __vector_36
                0x0000000000000126                __vector_29
                0x0000000000000126                __vector_40
                0x0000000000000126                __vector_8
                0x0000000000000126                __vector_26
                0x0000000000000126                __vector_48
                0x0000000000000126                __vector_14
                0x0000000000000126                __vector_53
                0x0000000000000126                __vector_10
                0x0000000000000126                __vector_50
                0x0000000000000126                __vector_16
                0x0000000000000126                __vector_18
                0x0000000000000126                __vector_20
                0x0000000000000126                __vector_42
 .text          0x000000000000012a      0x8a6 ./main.o
                0x000000000000012a                app_start
                0x0000000000000132                puthex
                0x0000000000000164                putch
                0x0000000000000172                getch
                0x00000000000001ae                gethexnib
                0x00000000000001ce                gethex
                0x00000000000001e4                getNch
                0x00000000000001fc                byte_response
                0x0000000000000250                nothing_response
                0x000000000000028e                main
 .text          0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .text          0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_copy_data.o)
 .text          0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
 .text          0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eerd_byte_atmega2560.o)
 .text          0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eewr_byte_atmega2560.o)
                0x00000000000009d0                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000009d0        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000009d0       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eerd_byte_atmega2560.o)
                0x00000000000009d0                __eerd_byte_m2560
 .text.avr-libc
                0x00000000000009e0       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eewr_byte_atmega2560.o)
                0x00000000000009e0                __eewr_byte_m2560
                0x00000000000009e2                __eewr_r18_m2560
                0x00000000000009fc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000009fc        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
                0x00000000000009fc                exit
                0x00000000000009fc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000009fc        0x4 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000a00                _etext = .

.data           0x0000000000800200       0x4e load address 0x0000000000000a00
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 .data          0x0000000000800200       0x4d ./main.o
                0x000000000080024b                pagesz
                0x000000000080024c                lower_round
 .data          0x000000000080024d        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .data          0x000000000080024d        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_copy_data.o)
 .data          0x000000000080024d        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
 .data          0x000000000080024d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eerd_byte_atmega2560.o)
 .data          0x000000000080024d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eewr_byte_atmega2560.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080024e                . = ALIGN (0x2)
 *fill*         0x000000000080024d        0x1 00
                0x000000000080024e                _edata = .
                0x000000000080024e                PROVIDE (__data_end, .)

.bss            0x000000000080024e      0x108
                0x000000000080024e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080024e        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 .bss           0x000000000080024e        0x1 ./main.o
                0x000000000080024e                error_count
 .bss           0x000000000080024f        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_exit.o)
 .bss           0x000000000080024f        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_copy_data.o)
 .bss           0x000000000080024f        0x0 /usr/lib/gcc/avr/4.5.3/avr6/libgcc.a(_clear_bss.o)
 .bss           0x000000000080024f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eerd_byte_atmega2560.o)
 .bss           0x000000000080024f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eewr_byte_atmega2560.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080024f      0x107 ./main.o
                0x000000000080024f                address
                0x0000000000800251                buff
                0x0000000000800351                length
                0x0000000000800353                i
                0x0000000000800354                address_high
                0x0000000000800355                flags
                0x0000000000800356                PROVIDE (__bss_end, .)
                0x0000000000000a00                __data_load_start = LOADADDR (.data)
                0x0000000000000a4e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800356        0x0
                0x0000000000800356                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800356                PROVIDE (__noinit_end, .)
                0x0000000000800356                _end = .
                0x0000000000800356                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x858
 *(.stab)
 .stab          0x0000000000000000      0x6e4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o
 .stab          0x00000000000006e4       0x90 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eerd_byte_atmega2560.o)
                                         0x9c (size before relaxing)
 .stab          0x0000000000000774       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/libc.a(eewr_byte_atmega2560.o)
                                         0xf0 (size before relaxing)

.stabstr        0x0000000000000000       0xb2
 *(.stabstr)
 .stabstr       0x0000000000000000       0xb2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ATm2560Bootloader.elf elf32-avr)
LOAD linker stubs
